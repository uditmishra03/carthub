apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
  namespace: shopping-cart
  labels:
    app: backend
    tier: application
spec:
  replicas: 3
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
        tier: application
    spec:
      serviceAccountName: backend-service-account
      containers:
      - name: backend
        image: BACKEND_IMAGE_URI  # Will be replaced during deployment
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: DATABASE_HOST
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: DATABASE_HOST
        - name: DATABASE_PORT
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: DATABASE_PORT
        - name: DATABASE_NAME
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: DATABASE_NAME
        - name: AWS_REGION
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: AWS_REGION
        - name: DATABASE_SECRET_ARN
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: secret-arn
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health/live
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1000
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: tmp
        emptyDir: {}
      securityContext:
        fsGroup: 1000
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: backend-service-account
  namespace: shopping-cart
  annotations:
    eks.amazonaws.com/role-arn: BACKEND_ROLE_ARN  # Will be set by CDK
---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  namespace: shopping-cart
  labels:
    app: backend
spec:
  type: ClusterIP
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
    name: http
  selector:
    app: backend
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: backend-pdb
  namespace: shopping-cart
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: backend
